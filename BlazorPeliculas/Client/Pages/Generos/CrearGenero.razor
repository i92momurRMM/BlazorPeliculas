@page "/generos/crear"
@inject IRepositorio repositorio
@inject NavigationManager navigationManager
@inject IMostrarMensajes mostrarMensajes
@inject IJSRuntime js
@inject AppState appState
@attribute [Authorize(Roles = "admin")]

<h3>Crear Genero</h3>

<FormularioGenero OnValidSubmit="Crear" Genero="Genero" />

@code 
{ 
	private Genero Genero = new Genero();

	private async Task Crear()
	{
		try
		{
			var httpResponse = await repositorio.Post("api/generos", Genero);
			if (httpResponse.Error)
			{
				var body = await httpResponse.GetBody();
				await mostrarMensajes.MostrarMensajeError(body);
			}
			else
			{
				navigationManager.NavigateTo("/generos");
			}
		}
		catch (Exception ex)
		{
			// TODO, esta logica que es igual para todos nos la podemos llevar al repositorio.cs
			if (ex.GetType().ToString() == "WebAssembly.JSException" || ex.Message == "TypeError: Failed to fetch")
			{
				await js.GuardarRegistroParaCrear("api/generos", Genero);
				// Notificamos que hay un cambio en el contador de sincronizaciones pendientes.
				await appState.NotificarActualizarSincronizacionesPendientes();
				navigationManager.NavigateTo("/generos");
			}
			else
			{
				throw ex;
			}
		}
	}
}
